<div class="w-[20%] ml-[20px] mr-auto flex">
  <div class="flex justify-center flex-col">
    <% @sections.each_with_index do |section, index| %>
      <div id="<%= "step-#{index + 1}" %>" class="flex items-center justify-center containers">
        <div class="outer-div <%= index.zero? ? 'active-outerdiv' : '' %>">
          <%= link_to alter_lesson_admin_section_lessons_path(section_id: section.id), data: { turbo_method: :get, turbo_stream: true } do %>
            <div class="circle <%= index.zero? ? 'active-circle' : '' %> flex justify-center items-center ">
              <span class="text-[30px] text-white "><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0,0,256,256" width="20px" height="20px"><g transform=""><g fill="#ffffff" fill-rule="nonzero" stroke="none" stroke-width="1" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="10" stroke-dasharray="" stroke-dashoffset="0" font-family="none" font-weight="none" font-size="none" text-anchor="none" style="mix-blend-mode: normal"><g transform="scale(5.12,5.12)"><path d="M41.9375,8.625c-0.66406,0.02344 -1.27344,0.375 -1.625,0.9375l-18.8125,28.78125l-12.1875,-10.53125c-0.52344,-0.54297 -1.30859,-0.74609 -2.03125,-0.51953c-0.71875,0.22266 -1.25391,0.83203 -1.37891,1.57422c-0.125,0.74609 0.17578,1.49609 0.78516,1.94531l13.9375,12.0625c0.4375,0.37109 1.01563,0.53516 1.58203,0.45313c0.57031,-0.08594 1.07422,-0.41016 1.38672,-0.89062l20.09375,-30.6875c0.42969,-0.62891 0.46484,-1.44141 0.09375,-2.10547c-0.37109,-0.66016 -1.08594,-1.05469 -1.84375,-1.01953z"></path></g></g></g></svg></span>
            </div>
          <% end %>
        </div>
      </div>
      <% unless index == @sections.size - 1 %>
        <div id="<%= "line-#{index + 1}" %>" class="flex items-center flex-col containers">
          <div class="line"></div>
        </div>
      <% end %>
    <% end %>
  </div>
  <div class="flex justify-between flex-col mt-[20px]">
    <% @sections.each_with_index do |section, index| %>
      <div class="splite-section">
        <h2 id="<%= "text#{index + 1}" %>" class="text-noramal <%= index.zero? ? 'text-active' : '' %> font-medium"><%= link_to section.title, alter_lesson_admin_section_lessons_path(section_id: section.id), data: { turbo_method: :get, turbo_stream: true } %></h2>
        <h4><%= section.description %></h4>
      </div>
    <% end %>
  </div>
  <div class="flex items-end justify-end">
    <button id="next-button" class="add-button   flex justify-end items-end py-2 px-10 text-[#fff] gap-x-1 text-sm font-semibold rounded-lg border border-transparent bg-gradient-to-r from-[#1AB69D] to-[#31B978]">Next</button>
  </div>
</div>
<script>
  function stepperLoop() {

    console.log("stepperLoop");
  const active = {
    stepper: 1,
  };

  const slideStepper = function (element) {
    $(".outer-div, .line, .circle, h2").removeClass(
      "active-outerdiv fineshed-outerdiv active-circle fineshed-circle text-active text-fineshed fineshed-line"
    );

    const currentStep = element.replace("step-", "");

    for (let i = 1; i <= currentStep; i++) {
      const stepId = `#step-${i}`;
      const textId = `#text${i}`;

      if (i == currentStep) {
        $(`${stepId} .outer-div`).addClass("active-outerdiv");
        $(`${stepId} .circle`).addClass("active-circle");
        $(`${textId}`).addClass("text-active");
      } else {
        $(`${stepId} .outer-div`).addClass("fineshed-outerdiv");
        $(`${stepId} .circle`).addClass("fineshed-circle");
        $(`${textId}`).addClass("text-fineshed");
      }

      if (i < currentStep) {
        const lineId = `#line-${i}`;
        $(`${lineId} .line`).addClass("fineshed-line");
      }
    }
  };

  const buttonSlideStepper = function () {
    if (active.stepper < sectionsSize) {
      slideStepper(`step-${active.stepper + 1}`);
      active.stepper += 1;
    }
  };
  $(".containers").on("click", function () {
    const elementId = $(this).attr("id");
    slideStepper(elementId);
  });

  $(".circle").on("click", function (event) {
    const containerId = $(this).closest(".containers").attr("id");
    const currentStep = containerId.replace("step-", "");
    if (currentStep > 1) {
      slideStepper(`step-${currentStep}`);
      active.stepper = parseInt(currentStep);
    }
  });

  $("#next-button").on("click", function () {
    buttonSlideStepper();
  });

  slideStepper(`step-${active.stepper}`);
  }
  $(document).ready(function () {
  stepperLoop();
  $(document).on("turbo:render", function () {
    stepperLoop();
  });
  });
</script>

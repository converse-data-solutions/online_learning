<div class="w-full max-w-lg mx-auto flex justify-center flex-col mt-9">
  <div class="w-full max-w-lg p-4 bg-white border border-gray-200 rounded-lg shadow sm:p-6 md:p-8 dark:bg-gray-800 dark:border-gray-700">
    <h5 class="text-xl mb-7 font-medium text-gray-900 dark:text-white">Sign up to our platform</h5>
    <%= form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f| %>
      <%= f.hidden_field :role, value: 'student' %>
      <div class="field">
        <%= f.label :name %><br />
        <%= f.text_field :name, id: "user_name", autofocus: true, autocomplete: "name", :class => "mb-4 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white" %>
        <% if resource.errors.has_key?(:name) %>
          <p class="text-red-500 text-sm"><%= resource.errors.full_messages_for(:name).join(", ") %></p>
        <% end %>
        <p id="name-error" class="text-red-500 text-sm"></p>
        <!-- Frontend validation error message -->
      </div>
      <div class="field">
        <%= f.label :email %><br />
        <%= f.email_field :email, id: "user_email", autofocus: true, autocomplete: "email", :class => "mb-4 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white" %>
        <% if resource.errors.has_key?(:email) %>
          <p class="text-red-500 text-sm"><%= resource.errors.full_messages_for(:email).join(", ") %></p>
        <% end %>
        <p id="email-error" class="text-red-500 text-sm"></p>
        <!-- Frontend validation error message -->
      </div>
      <div class="field">
        <%= f.label :password %>
        <% if @minimum_password_length %>
          <em>(<%= @minimum_password_length %> characters minimum)</em>
        <% end %><br />
        <%= f.password_field :password, id: "user_password", autocomplete: "new-password", :class => "mb-4 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white" %>
        <% if resource.errors.has_key?(:password) %>
          <p class="text-red-500 text-sm"><%= resource.errors.full_messages_for(:password).join(", ") %></p>
        <% end %>
        <p id="password-error" class="text-red-500 text-sm"></p>
        <!-- Frontend validation error message -->
      </div>
      <div class="field">
        <%= f.label :password_confirmation %><br />
        <%= f.password_field :password_confirmation, id: "user_password_confirmation", autocomplete: "new-password", :class => "bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white" %>
        <% if resource.errors.has_key?(:password_confirmation) %>
          <p class="text-red-500 text-sm"><%= resource.errors.full_messages_for(:password_confirmation).join(", ") %></p>
        <% end %>
        <p id="password-confirmation-error" class="text-red-500 text-sm"></p>
        <!-- Frontend validation error message -->
      </div>
      <br>
      <%= flash[:recaptcha_error] %>
      <%#= recaptcha_tags %>
      <%= recaptcha_v3(action: 'login', site_key: "6LfoFZ8oAAAAAOq88cQI4Pp5TTUcYqftFUH17F_w") %>
      <%# <button class="g-recaptcha" 
        data-sitekey="reCAPTCHA_site_key" 
        data-callback='onSubmit' 
        data-action='submit'>Submit</button> %>
      <div class="actions mt-2 flex justify-center">
        <%= f.submit "Sign up", class: "block reset-form text-white bg-gradient-to-r from-[#1AB69D] to-[#31B978] px-1 py-1 md:px-4 md:py-2 rounded-[7px] text-base font-semibold hover:bg-[#0082CE] w-[150px] h-[42px]", onclick: "registrationValidation()" %>
      </div>
    <% end %>
    <div class="actions mt-8 flex">
      <p class="text-center text-base">Don't have an account?</p>
      <%- if controller_name != 'sessions' %>
        <%= link_to "Log in", new_session_path(resource_name), class: "ml-2 font-semibold text-[#31B978]" %><br />
      <% end %>
    </div>
    <div class="actions mt-8 flex justify-center">
      <%- if devise_mapping.omniauthable? %>
        <%- resource_class.omniauth_providers.each do |provider| %>
          <%= form_for "Log in",
     url: omniauth_authorize_path(resource_name, provider),
      method: :post,
       data: { turbo: "false" } do |f| %>
            <%= f.submit "log in", type: "image", src: asset_path("btn_google_signin_dark_normal_web.png") %>
          <% end %>
        <% end %>
      <% end %>
    </div>
  </div>
</div>
<script>
function registrationValidation() {
  // Function to validate name field
  function validateName() {
    let name = $("#user_name").val().trim();
    if (!name) {
      $("#name-error").text("Name can't be blank");
      return false; // Return false to indicate validation failure
    } else {
      $("#name-error").text("");
      return true; // Return true to indicate validation success
    }
  }

  // Function to validate email field
  function validateEmail() {
    let email = $("#user_email").val().trim();
    let emailRegex = /^[a-z0-9._-]+@[a-z0-9.-]+\.[a-z]{2,}$/;
    if (!email) {
      $("#email-error").text("Email can't be blank");
      return false; // Return false to indicate validation failure
    } else if (!emailRegex.test(email)) {
      $("#email-error").text("Please enter a valid email address");
      return false; // Return false to indicate validation failure
    } else {
      $("#email-error").text("");
      return true; // Return true to indicate validation success
    }
  }

  // Function to validate password field
  function validatePassword() {
    let password = $("#user_password").val();
    let hasUppercase = /[A-Z]/.test(password);
    let hasNumber = /\d/.test(password);
    let hasSpecialChar = /[!@#$%^&*()_+]/.test(password);
    if (!password) {
      $("#password-error").text("Password can't be blank");
      return false;
    } else if (password.length < 8) {
      $("#password-error").text("Password must be at least 8 characters long");
      return false;
    } else if (!hasUppercase) {
      $("#password-error").text("Password must contain at least one uppercase letter");
      return false;
    } else if (!hasNumber) {
      $("#password-error").text("Password must contain at least one numeric digit");
      return false;
    } else if (!hasSpecialChar) {
      $("#password-error").text("Password must contain at least one special character");
      return false;
    } else {
      $("#password-error").text("");
      return true;
    }
  }

  // Function to validate password confirmation field
  function validatePasswordConfirmation() {
    let password = $("#user_password").val();
    let passwordConfirmation = $("#user_password_confirmation").val();
    if (password !== passwordConfirmation) {
      $("#password-confirmation-error").text("Password confirmation doesn't match");
      return false; // Return false to indicate validation failure
    } else {
      $("#password-confirmation-error").text("");
      return true; // Return true to indicate validation success
    }
  }

  // Event bindings for registration form fields
  $("#user_name").on("blur", validateName); // Validate name on blur
  $("#user_email").on("blur", validateEmail); // Validate email on blur
  $("#user_password").on("blur", validatePassword); // Validate password on blur
  $("#user_password_confirmation").on("blur", validatePasswordConfirmation); // Validate password confirmation on blur

  // Event binding for form submission
  $("form").on("submit", function(event) {
    // Validate all fields on form submission
    let isNameValid = validateName();
    let isEmailValid = validateEmail();
    let isPasswordValid = validatePassword();
    let isPasswordConfirmationValid = validatePasswordConfirmation();

    // Check if any field is invalid
    if (!isNameValid || !isEmailValid || !isPasswordValid || !isPasswordConfirmationValid) {
      // Prevent form submission
      event.preventDefault();

      // Show all error messages
      validateName();
      validateEmail();
      validatePassword();
      validatePasswordConfirmation();
    }
  });
}

  $(document).ready(function() {
  registrationValidation();
  $(document).on("turbo:render", function() {
    registrationValidation();
  });
  });
</script>
